/* faz busca sequencial por uma chave primaria em um arquivo de registros
   no formato gravado por writrec-fwrite.c */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define  TRUE     1
#define  FALSE    0
#define MAX_REC_SIZE 512
#define DELIM_STR "|"

int input(char*, int);
int get_rec(FILE*, char*, int);

int main(){

    FILE * fd;
    int matched;
    int rec_lgth;
    char filename[30];
    char search_key[30];
    char buffer[MAX_REC_SIZE];
    char* field;

    printf("Entre com o nome do arquivo a ser aberto: ");
    input(filename, 30);

    if ((fd=fopen(filename,"rb")) == NULL) {
       printf("Erro na abertura do arquivo --- programa abortado\n");
       exit(1);
    }

    printf("\n\nDigite o SOBRENOME a ser buscado: "); // get search key
    input(search_key, 30);
    
	matched = FALSE;
	
    while (!matched && (rec_lgth = get_rec(fd, buffer, MAX_REC_SIZE)) > 0){
		field = strtok(buffer, DELIM_STR);
		if (strcmp (field, search_key) == 0)
			matched = TRUE;
    }

    if (matched) {
		printf("\n\nRegistro encontrado:\n\n");

		int fld_count = 0;
		printf("\tCampo %d: %s\n",++fld_count, field);

		while ((field = strtok(NULL, DELIM_STR)) != NULL) {
			printf("\tCampo %d: %s\n",++fld_count, field);
		}
    }
    else printf("\n\nRegistro nao encontrado.\n");

    fclose(fd);
}

/* função que lê um registro do arquivo fd para a string buffer
*/
int get_rec(FILE* fd, char* buffer, int size){

      int rec_lgth;

      if (fread(&rec_lgth, sizeof(rec_lgth), 1, fd) == 0) // get record length
         return 0;

      if (rec_lgth < size) {
	      
		  rec_lgth = fread(buffer, sizeof(char), rec_lgth, fd); // read record
	      buffer[rec_lgth] = '\0';
	      return rec_lgth;	
	  }
	  else {	  	
		  printf ("Buffer overflow\n");
		  return 0;
	  }	  
}

/* função que lê uma linha do stdin para a string str 
*/
int input(char * str, int size) {    

	int i = 0;    
	char c = getchar();    

	while (c != '\n') {        
		if (size > 0) {            
			str[i] = c;            
			i++;            
			size--;        
		}        
		c = getchar();   
	}    

	str[i] = '\0';    
	return i;
}
